int sum;
int current;
loop_require(true)
loop_init{
	sum = 0;
    current = 2;
}
loop(current != 0 ) {
loop_invariant((sum == (2 * (2-current))) && (current > 0) && (current < 3) )
loop_variant(current)
sum = sum + 2;
current = current - 1;
}
loop_ensure(sum == 4)


// Q => Initialization => (invariant <=> true)

// ((invariant <=> true) && not(ExitCondtion) ) => assignments => ((invariant <=> true) && (x>0) && (x_old > x)) 

//((invariant <=> true) && (ExitCondtion)) => R